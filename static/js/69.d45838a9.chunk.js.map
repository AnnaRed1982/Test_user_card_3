{"version":3,"file":"static/js/69.d45838a9.chunk.js","mappings":"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","sources":["services/api.js","webpack://react-homework-template/./src/components/UsersList/UsersList.module.css?09e2","components/UsersList/UsersList.js","webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.js","webpack://react-homework-template/./src/pages/Tweets/Tweets.module.css?3fe9","pages/Tweets/Tweets.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6421862f86992901b2b5a3ee.mockapi.io';\n\nexport const fetchUsers = async (page = 1, searchValue) => {\n  if (searchValue === 'follow') {\n    const response = await axios.get('/tweets', {\n      params: {\n        page,\n        limit: 3,\n        vote: false,\n      },\n    });\n    return response.data;\n  }\n  if (searchValue === 'followings') {\n    const response = await axios.get('/tweets', {\n      params: {\n        page,\n        limit: 3,\n        vote: true,\n      },\n    });\n    return response.data;\n  }\n  if (searchValue === 'all') {\n    const response = await axios.get('/tweets', {\n      params: {\n        page,\n        limit: 3,\n      },\n    });\n    return response.data;\n  }\n};\n\nexport const fetchUsersAmount = async searchValue => {\n  if (searchValue === 'follow') {\n    const response = await axios.get('/tweets', {\n      params: {\n        vote: false,\n      },\n    });\n    return response.data;\n  }\n  if (searchValue === 'followings') {\n    const response = await axios.get('/tweets', {\n      params: {\n        vote: true,\n      },\n    });\n    return response.data;\n  }\n  if (searchValue === 'all') {\n    const response = await axios.get('/tweets');\n    return response.data;\n  }\n};\n\nexport const fetchUserVoteUpdate = async (id, vote, followers) => {\n  const response = await axios.put(`/tweets/${id}`, { vote, followers });\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"UsersList_list__cvnrs\",\"card\":\"UsersList_card__y7Pb2\",\"logo\":\"UsersList_logo__U3a0G\",\"background\":\"UsersList_background__7aAyP\",\"rectangle\":\"UsersList_rectangle__mHQiU\",\"ellipse\":\"UsersList_ellipse__+TPil\",\"foto\":\"UsersList_foto__o49Wp\",\"titleBox\":\"UsersList_titleBox__XBGrK\",\"title\":\"UsersList_title__NyJjb\",\"button\":\"UsersList_button__q-CaV\",\"buttonActive\":\"UsersList_buttonActive__crWuF\"};","import Logo from '../../images/Logo.png';\nimport Background from '../../images/Background.png';\nimport Rectangle from '../../images/Rectangle.png';\nimport Ellipse from '../../images/Ellipse.png';\nimport css from './UsersList.module.css';\n\nexport const UsersList = ({ users, userVote }) => {\n  return (\n    <>\n      <ul className={css.list}>\n        {users.map(({ id, user, tweets, followers, avatar, vote }) => (\n          <li key={id} className={css.card}>\n            <img src={Logo} alt=\"logo\" className={css.logo} />\n            <img src={Background} alt=\"background\" className={css.background} />\n            <img src={Rectangle} alt=\"rectangle\" className={css.rectangle} />\n            <img src={Ellipse} alt=\"ellipse\" className={css.ellipse} />\n            <img src={avatar} alt={user} className={css.foto} />\n            <div className={css.titleBox}>\n              <p className={css.title}>{tweets} TWEETS</p>\n              <p className={css.title}>\n                {followers.toLocaleString('en-US')} Followers\n              </p>\n            </div>\n            <button\n              type=\"button\"\n              className={vote ? css.buttonActive : css.button}\n              onClick={\n                !vote\n                  ? () => userVote(id, !vote, (followers += 1))\n                  : () => userVote(id, !vote, (followers -= 1))\n              }\n            >\n              {vote ? 'Following' : 'Follow'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import css from './Button.module.css';\nimport { HiArrowDown } from 'react-icons/hi';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className={css.button} onClick={onClick}>\n      Load more\n      <HiArrowDown size=\"20\" />\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"Tweets_buttonContainer__bPfz+\",\"button\":\"Tweets_button__d7Ykc\",\"select\":\"Tweets_select__mc4hU\"};","import { useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { HiArrowLeft } from 'react-icons/hi';\n\nimport { fetchUsers } from 'services/api';\nimport { fetchUserVoteUpdate } from 'services/api';\nimport { fetchUsersAmount } from 'services/api';\n\nimport { UsersList } from 'components/UsersList/UsersList';\nimport { Button } from 'components/Button/Button';\n\nimport css from './Tweets.module.css';\n\nconst Tweets = () => {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('ideal');\n  const [usersAmount, setUsersAmount] = useState(0);\n  const [page, setPage] = useState(1);\n  const [searchValue, setSearchValue] = useState('all');\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchResponse = async () => {\n      try {\n        const response = await fetchUsers(page, searchValue);\n        setUsers(prevUsers => [...prevUsers, ...response]);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    };\n\n    fetchResponse();\n  }, [page, searchValue]);\n\n  useEffect(() => {\n    const fetchResponsePages = async () => {\n      try {\n        const response = await fetchUsersAmount(searchValue);\n        setUsersAmount(response.length);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    };\n\n    fetchResponsePages();\n  }, [searchValue]);\n\n  const userVote = async (id, vote, followers) => {\n    try {\n      await fetchUserVoteUpdate(id, vote, followers);\n      const response = await fetchUsersAmount(searchValue);\n      setUsersAmount(response.length);\n      let length = users.length;\n\n      setUsers(response.slice(0, length));\n      setStatus('resolved');\n    } catch (error) {\n      setStatus('rejected');\n      setError(error.message);\n    }\n  };\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const handleSelect = event => {\n    setUsers([]);\n    setPage(1);\n    setSearchValue(event.target.value);\n  };\n\n  if (status === 'rejected') {\n    return (\n      <>\n        <h2>Whoops, something went wrong: {error}</h2>\n      </>\n    );\n  }\n  if (status === 'resolved') {\n    return (\n      <div className=\"container\">\n        <label>\n          <select\n            value={searchValue}\n            className={css.select}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"follow\">Follow</option>\n            <option value=\"followings\">Following</option>\n          </select>\n        </label>\n        <UsersList users={users} userVote={userVote} />\n        <div className={css.buttonContainer}>\n          <Link to={backLinkHref.current} style={{ textDecoration: 'none' }}>\n            <button type=\"button\" className={css.button}>\n              <HiArrowLeft size=\"20\" />\n              Go back\n            </button>\n          </Link>\n          {users.length > 0 && users.length < usersAmount && (\n            <Button onClick={loadMore} />\n          )}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Tweets;\n"],"names":["axios","fetchUsers","page","searchValue","params","limit","vote","response","data","fetchUsersAmount","fetchUserVoteUpdate","id","followers","UsersList","users","userVote","className","css","map","user","tweets","avatar","src","alt","Background","toLocaleString","type","onClick","Button","size","useState","setUsers","error","setError","status","setStatus","usersAmount","setUsersAmount","setPage","setSearchValue","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchResponse","prevUsers","message","fetchResponsePages","length","slice","value","onChange","event","target","to","current","style","textDecoration","prevPage"],"sourceRoot":""}